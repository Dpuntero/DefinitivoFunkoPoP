@model AppFunkoPop.Models.PasswordChangeModel
@{
    if (Session["ID_ROL"] == null)
    {
        Response.Redirect("~/Home/Index");
    }
    

    ViewBag.Title = "CambiarContraseña";
}

<h2>CambiarContraseña</h2>

@using (Html.BeginForm("CambiarContraseña", "Account", FormMethod.Post))
{
<p>
    @*@Html.LabelFor(model => model.contrasenaAntigua)*@
    <label class="control-label col-md-2"> @AppFunkoPop.Resources.Usuarios.contAntigua </label>
</p>
<p>
    @Html.EditorFor(model => model.contrasenaAntigua, new { htmlAttributes = new { @class = "form-control" } })
    @Html.ValidationMessageFor(model => model.contrasenaAntigua, "", new { @class = "text-danger" })
</p>
    <p>
        @*@Html.LabelFor(model => model.contrasenaNueva)*@
        <label class="control-label col-md-2">@AppFunkoPop.Resources.Usuarios.contNueva </label>
</p>
    <p>
        @Html.EditorFor(model => model.contrasenaNueva, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.contrasenaNueva, "", new { @class = "text-danger" })
    </p>
    <p>
        @*@Html.LabelFor(model => model.contrasenaRepetida)*@
        <label class="control-label col-md-2">@AppFunkoPop.Resources.Usuarios.confContNueva</label>
</p>
    <p>
        @Html.EditorFor(model => model.contrasenaRepetida, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.contrasenaRepetida, "", new { @class = "text-danger" })
    </p>

   
    <label> @Html.DisplayFor(model => model.contrasenaErrorMessage)</label>
    <br />
    <br />
    <input type="submit" name="entrar" value="@AppFunkoPop.Resources.Usuarios.entrar"  class="btn btn-primary" />
    <input type="reset" name="borrar" value="@AppFunkoPop.Resources.Usuarios.borrar" class="btn btn-default" />
}

